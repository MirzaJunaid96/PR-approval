name: Deploy from Issue

on:
  issues:
    types: [opened, edited]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Output issue body (Debug)
        run: |
          ISSUE_URL="${{ github.event.issue.url }}"
          echo "Issue URL: ${ISSUE_URL}"
          ISSUE_BODY=$(curl -s ${ISSUE_URL} | jq -r '.body')
          echo "Issue Body (for debugging):"
          echo "${ISSUE_BODY}"  # Print the raw issue body for debugging

      - name: Extract branch name using sed (Debug)
        run: |
          ISSUE_URL="${{ github.event.issue.url }}"
          ISSUE_BODY=$(curl -s ${ISSUE_URL} | jq -r '.body')

          # Debug the raw issue body
          echo "Raw ISSUE_BODY content:"
          echo "${ISSUE_BODY}"

          # Use sed to extract branch name
          BRANCH_NAME=$(echo "${ISSUE_BODY}" | sed -n '/### BRANCH/{n;p}' | xargs)
          
          echo "Extracted Branch Name (for debugging): ${BRANCH_NAME}"
          
          # If branch name is empty, raise an error
          if [ -z "$BRANCH_NAME" ]; then
            echo "Error: Branch name not found in the issue body."
            exit 1
          fi
          
          # Set branch name as environment variable
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Checkout to the specified branch
        run: |
          echo "Checking out branch: ${{ env.BRANCH_NAME }}"
          git checkout ${{ env.BRANCH_NAME }}

      - name: Verify current branch
        run: |
          CURRENT_BRANCH=$(git branch --show-current)
          echo "Currently on branch: ${CURRENT_BRANCH}"

          if [ "$CURRENT_BRANCH" != "${{ env.BRANCH_NAME }}" ]; then
            echo "Error: Failed to checkout the correct branch."
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

