name: Deployment Pipeline

on:
  issues:
    types: [opened, edited]

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout the repository
    - name: Checkout the repository
      uses: actions/checkout@v3
      
    # Step 2: Extract branch name from the issue body
    - name: Extract branch name from issue
      id: extract-branch
      run: |
        echo "Extracting branch name from issue..."
        # Fetch the issue body using GitHub CLI
        issue_body=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} | jq -r .body)

        # Extract the branch name (assuming it's the 'branch' field in your issue template)
        branch=$(echo "$issue_body" | grep -i "BRANCH" | awk -F': ' '{print $2}' | xargs)
        echo "Branch: $branch"
        
        # Export branch name as an environment variable for future steps
        echo "::set-output name=branch::$branch"

    # Step 3: Checkout the branch
    - name: Checkout branch
      run: |
        branch_name=${{ steps.extract-branch.outputs.branch }}
        echo "Checking out to branch: $branch_name"
        git fetch origin $branch_name
        git checkout $branch_name
        git pull origin $branch_name

    # Step 4: Print the branch name
    - name: Print checked out branch
      run: |
        echo "Currently checked out branch: $(git branch --show-current)"
        
    # Step 5: Build the project
    - name: Build the project
      run: |
        echo "Starting build process..."
        # Insert your build command here, e.g., `npm install && npm run build`
        # Example (Node.js project):
        npm install
        npm run build
